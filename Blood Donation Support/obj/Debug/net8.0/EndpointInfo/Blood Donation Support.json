{
  "openapi": "3.0.1",
  "info": {
    "title": "Blood Donation Support",
    "version": "v1"
  },
  "paths": {
    "/api/BloodDonationPeriod": {
      "post": {
        "tags": [
          "BloodDonationPeriod"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBloodDonationPeriodDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBloodDonationPeriodDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBloodDonationPeriodDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "get": {
        "tags": [
          "BloodDonationPeriod"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/BloodDonationPeriod/{id}": {
      "get": {
        "tags": [
          "BloodDonationPeriod"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      },
      "put": {
        "tags": [
          "BloodDonationPeriod"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBloodDonationPeriodDTO"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBloodDonationPeriodDTO"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBloodDonationPeriodDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/BloodDonationPeriod/{id}/status": {
      "patch": {
        "tags": [
          "BloodDonationPeriod"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            },
            "text/json": {
              "schema": {
                "type": "string"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/DonationRequest/{id}": {
      "get": {
        "tags": [
          "DonationRequest"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/DonationRequest/all": {
      "get": {
        "tags": [
          "DonationRequest"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/DonationRequest/update/{id}": {
      "put": {
        "tags": [
          "DonationRequest"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDonationRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDonationRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDonationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/User/login": {
      "post": {
        "tags": [
          "User"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LoginModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/User/register": {
      "post": {
        "tags": [
          "User"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterModel"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterModel"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterModel"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/User/profile/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/User/search/{citizenNumber}": {
      "get": {
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "citizenNumber",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/User/all": {
      "get": {
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/User/update/{id}": {
      "put": {
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUser"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUser"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUser"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/WeatherForecast": {
      "get": {
        "tags": [
          "WeatherForecast"
        ],
        "operationId": "GetWeatherForecast",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CreateBloodDonationPeriodDTO": {
        "required": [
          "location",
          "periodDateFrom",
          "periodDateTo",
          "periodName",
          "status",
          "targetQuantity"
        ],
        "type": "object",
        "properties": {
          "periodName": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "location": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "status": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string"
          },
          "periodDateFrom": {
            "type": "string",
            "format": "date-time"
          },
          "periodDateTo": {
            "type": "string",
            "format": "date-time"
          },
          "targetQuantity": {
            "type": "integer",
            "format": "int32"
          },
          "imageUrl": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "DateOnly": {
        "type": "object",
        "properties": {
          "year": {
            "type": "integer",
            "format": "int32"
          },
          "month": {
            "type": "integer",
            "format": "int32"
          },
          "day": {
            "type": "integer",
            "format": "int32"
          },
          "dayOfWeek": {
            "$ref": "#/components/schemas/DayOfWeek"
          },
          "dayOfYear": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "dayNumber": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "DayOfWeek": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6
        ],
        "type": "integer",
        "format": "int32"
      },
      "LoginModel": {
        "type": "object",
        "properties": {
          "citizenNumber": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RegisterModel": {
        "required": [
          "address",
          "citizenNumber",
          "dateOfBirth",
          "email",
          "fullName",
          "password",
          "phoneNumber",
          "sex"
        ],
        "type": "object",
        "properties": {
          "fullName": {
            "minLength": 1,
            "type": "string"
          },
          "password": {
            "minLength": 6,
            "type": "string"
          },
          "citizenNumber": {
            "minLength": 1,
            "pattern": "^\\d{9,12}$",
            "type": "string"
          },
          "email": {
            "minLength": 1,
            "type": "string",
            "format": "email"
          },
          "phoneNumber": {
            "minLength": 1,
            "pattern": "^0\\d{9}$",
            "type": "string"
          },
          "dateOfBirth": {
            "$ref": "#/components/schemas/DateOnly"
          },
          "sex": {
            "type": "boolean"
          },
          "address": {
            "minLength": 1,
            "type": "string"
          },
          "bloodTypeId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "weight": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "height": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "isDonor": {
            "type": "boolean"
          },
          "isRecipient": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      },
      "UpdateBloodDonationPeriodDTO": {
        "required": [
          "location",
          "periodDateFrom",
          "periodDateTo",
          "periodName",
          "status",
          "targetQuantity"
        ],
        "type": "object",
        "properties": {
          "periodName": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string"
          },
          "location": {
            "maxLength": 255,
            "minLength": 0,
            "type": "string"
          },
          "status": {
            "maxLength": 20,
            "minLength": 0,
            "type": "string"
          },
          "periodDateFrom": {
            "type": "string",
            "format": "date-time"
          },
          "periodDateTo": {
            "type": "string",
            "format": "date-time"
          },
          "targetQuantity": {
            "type": "integer",
            "format": "int32"
          },
          "imageUrl": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateDonationRequest": {
        "required": [
          "responsibleById",
          "status"
        ],
        "type": "object",
        "properties": {
          "responsibleById": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "minLength": 1,
            "pattern": "Pending|Approved|Rejected",
            "type": "string"
          },
          "notes": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UpdateUser": {
        "required": [
          "address",
          "dateOfBirth",
          "email",
          "fullName",
          "passwordHash",
          "phoneNumber",
          "role",
          "sex",
          "updatedAt"
        ],
        "type": "object",
        "properties": {
          "passwordHash": {
            "minLength": 6,
            "type": "string"
          },
          "fullName": {
            "maxLength": 40,
            "minLength": 0,
            "type": "string"
          },
          "citizenNumber": {
            "maxLength": 12,
            "minLength": 0,
            "pattern": "^\\d{12}$",
            "type": "string",
            "nullable": true
          },
          "email": {
            "minLength": 1,
            "type": "string",
            "format": "email"
          },
          "phoneNumber": {
            "minLength": 1,
            "pattern": "^0\\d{9}$",
            "type": "string"
          },
          "dateOfBirth": {
            "$ref": "#/components/schemas/DateOnly"
          },
          "sex": {
            "maximum": 1,
            "minimum": 0,
            "type": "boolean"
          },
          "address": {
            "minLength": 1,
            "type": "string"
          },
          "role": {
            "minLength": 1,
            "pattern": "^(Admin|Staff|Member|Guest)$",
            "type": "string"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "WeatherForecast": {
        "type": "object",
        "properties": {
          "date": {
            "$ref": "#/components/schemas/DateOnly"
          },
          "temperatureC": {
            "type": "integer",
            "format": "int32"
          },
          "temperatureF": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "summary": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "Please enter JWT with Bearer into field. Example: Bearer {token}",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}